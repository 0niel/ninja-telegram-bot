syntax = "proto3";

package yandex.cloud.mdb.kafka.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/mdb/kafka/v1/connector.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/kafka/v1;kafka";
option java_package = "yandex.cloud.api.mdb.kafka.v1";

// A set of methods for managing Apache Kafka Connectors resources.
service ConnectorService {
  // Returns the specified Apache Kafka Connector resource.
  //
  // To get the list of available Apache Kafka Connector resources, make a [List] request.
  rpc Get (GetConnectorRequest) returns (Connector) {
    option (google.api.http) = { get: "/managed-kafka/v1/clusters/{cluster_id}/connectors/{connector_name}" };
  }

  // Retrieves the list of Apache Kafka Connector resources in the specified cluster.
  rpc List (ListConnectorsRequest) returns (ListConnectorsResponse) {
    option (google.api.http) = { get: "/managed-kafka/v1/clusters/{cluster_id}/connectors" };
  }

  // Creates a new Apache Kafka connector in the specified cluster.
  rpc Create (CreateConnectorRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-kafka/v1/clusters/{cluster_id}/connectors" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateConnectorMetadata"
      response: "Connector"
    };
  }

  // Updates an Apache Kafka connector in the specified cluster.
  rpc Update (UpdateConnectorRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/managed-kafka/v1/clusters/{cluster_id}/connectors/{connector_name}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateConnectorMetadata"
      response: "Connector"
    };
  }

  // Deletes the specified Apache Kafka connector.
  rpc Delete (DeleteConnectorRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/managed-kafka/v1/clusters/{cluster_id}/connectors/{connector_name}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteConnectorMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Resume the specified Apache Kafka connector.
  rpc Resume (ResumeConnectorRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-kafka/v1/clusters/{cluster_id}/connectors/resume/{connector_name}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "ResumeConnectorMetadata"
      response: "Connector"
    };
  }

  // Pause the specified Apache Kafka connector.
  rpc Pause (PauseConnectorRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-kafka/v1/clusters/{cluster_id}/connectors/pause/{connector_name}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "PauseConnectorMetadata"
      response: "Connector"
    };
  }

}

message GetConnectorRequest {
  // ID of the Apache Kafka Cluster resource to return.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the Apache Kafka Connector resource to return.
  // To get the name of the connector use a [ConnectorService.List] request.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];
}

message ListConnectorsRequest {
  // ID of the Apache Kafka cluster to list connectors in.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListConnectorsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.

  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, Set [page_token] to the [ListConnectorsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListConnectorsResponse {
  // List of Apache Kafka Connector resources.
  repeated Connector connectors = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListConnectorsRequest.page_size], use the [next_page_token] as the value
  // for the [ListConnectorsRequest.page_token] parameter in the next list request. Each subsequent
  // list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateConnectorRequest {
  // Required. ID of the Apache Kafka cluster to create a connector in.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Configuration of the connector to create.
  ConnectorSpec connector_spec = 2 [(required) = true];
}

message CreateConnectorMetadata {
  // ID of the Apache Kafka cluster where a connector is being created.
  string cluster_id = 1;

  // Name of the Apache Kafka connector that is being created.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];
}

message UpdateConnectorRequest {
  // Required. ID of the Apache Kafka cluster to update a connector in.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the connector to update.
  // To get the name of the connector, use a [ConnectorService.List] request.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];

  // Field mask that specifies which fields of the Connector resource should be updated.
  google.protobuf.FieldMask update_mask = 3;

  // Required. Configuration of the connector to update.
  UpdateConnectorSpec connector_spec = 4 [(required) = true];
}

message UpdateConnectorMetadata {
  // ID of the Apache Kafka cluster where a connector is being updated.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the Apache Kafka connector that is being updated.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];
}

message DeleteConnectorRequest {
  // Required. ID of the Apache Kafka cluster to delete a connector in.
  // To get the cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the connector to delete.
  // To get the name of the connector, use a [ConnectorService.List] request.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];
}

message DeleteConnectorMetadata {
  // ID of the Apache Kafka cluster where a connector is being deleted.
  string cluster_id = 1;

  // Name of the Apache Kafka connector that is being deleted.
  string connector_name = 2;
}

message ResumeConnectorRequest {
  // Required. ID of the Apache Kafka cluster to resume connector in.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the Apache Kafka Connector resource to resume.
  // To get the name of the connector use a [ConnectorService.List] request.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];
}

message ResumeConnectorMetadata {
  // Required. ID of the Apache Kafka cluster.
  string cluster_id = 1;

  // Name of the Apache Kafka Connector resource that is beign resumed.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];
}

message PauseConnectorRequest {
  // Required. ID of the Apache Kafka cluster to pause connector in.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the Apache Kafka Connector resource to pause.
  // To get the name of the connector use a [ConnectorService.List] request.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];
}

message PauseConnectorMetadata {
  // Required. ID of the Apache Kafka cluster.
  string cluster_id = 1;

  // Name of the Apache Kafka Connector resource that is being paused.
  string connector_name = 2 [(required) = true, (length) = "<=256", (pattern) = "[a-zA-Z0-9_-]*"];
}
